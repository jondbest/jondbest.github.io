<html>
<head>
<script src="https://cdn.jsdelivr.net/npm/vue@2.5.17/dist/vue.js"></script>
<style>
html, body, #app {
  height: 100%;
}
body {
  background: #20262E;
  margin: 0;
}
#app {
  display: flex;
  transition: all 0.2s;
}
textarea {
  width: 92%;
  height: 92%;
  border: none;
  border-radius: .1rem;
  box-shadow: .1rem .1rem .5rem rgba(0,0,0,.1);
  resize: none;
  padding: .25rem .5rem;
  margin: auto;
}
.col {
  display: inline-flex;
  width: 50%;
}
</style>
<body>
  <div id="app">
    <div class="col">
      <textarea placeholder="paste some IBM RPG code here" v-model="input"></textarea>
    </div>
    <div class="col">
      <textarea v-model="output"></textarea>
    </div>
  </div>
  <script>
new Vue({
  el: "#app",
  data: {
    input: "",
    patterns: [
      {pattern: "(movel)\\s*(\\S+)\\s+(\\S+)", output: "\t$3 = $2 + substr($3,$2.length(),$3.length()-$2.length());"},
      {pattern: "(move)\\s*(\\S+)\\s+(\\S+)", output: "\t$3 = $2;"},
      {pattern: "(z-add)\\s*(\\S+)\\s+(\\S+)", output: "\t$3 = $2;"},
      {pattern: "(add)\\s*(\\S+)\\s+(\\S+)", output: "\t$3 += $2;"},
      {pattern: "(\\S+)\\s*(ifeq)\\s*(\\S+)", output: "if ($1 == $3"},
      {pattern: "(\\S+)\\s*(ifgt)\\s*(\\S+)", output: "if ($1 < $3"},
      {pattern: "(\\S+)\\s*(andeq)\\s*(\\S+)", output: "&& $1 == $3"},
      {pattern: "(\\S+)\\s*(andlt)\\s*(\\S+)", output: "&& $1 < $3"},
      {pattern: "(\\S+)\\s*(andgt)\\s*(\\S+)", output: "&& $1 > $3"},
      {pattern: "(\\S+)\\s*(oreq)\\s*(\\S+)", output: "|| $1 == $3"},
      {pattern: "(\\S+)\\s*(orlt)\\s*(\\S+)", output: "|| $1 < $3"},
      {pattern: "(\\S+)\\s*(orgt)\\s*(\\S+)", output: "|| $1 > $3"},
      {pattern: "(endif)", output: "}"},
      {pattern: "([*]blanks)", output: "\'\'"},
      {pattern: "([*]zeros)", output: "0"},
    ]
  },
  computed: {
  	output: function(){
      if(this.input.includes('100      F')){
      	return this.parserpg(this.input);
      } else {
      	return this.rpg2js(this.input);
      }
    }
  },
  methods: {
  	parserpg: function(input){
      var self = this;
      let output = [];
      let terminator = '';
      let lines = input.split('\n');
      lines.forEach(function(line){
      	if(line.substr(7,7).trim()==='C'){
          let fields = [];
          if(line.substr(14,1)==='*'){//comment
            if(line.substr(16,1)!=="-" && line.substr(15,10).trim().length>0){ output.push('/* '+line.substr(15,20).trim()+' */');
            }
          } else {
            let js = self.rpg2js(line.substr(25,40));
            if(js.startsWith('if')) terminator = ') {';
            else if(terminator && !js.startsWith('&&') && !js.startsWith('||')){
            	js = terminator + js;
              terminator = '';
            }
            output.push(js);
          }
        }
      });
      return output.join("\n");
    },
    rpg2js: function(text){
      this.patterns.forEach(function(item){
        let rex = new RegExp(item.pattern, 'gi');
      	text = text.replace(rex, item.output)
      });
      return text.trim();
    },
  }
})
  </script>
</body>
</html>
